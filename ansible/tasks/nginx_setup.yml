---
- name: Install nginx
  apt:
    name: nginx
    state: present
  tags: nginx_setup

- name: Add domain names to /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ item }}"
    state: present
  with_items:
    - "{{ open_parcel_map_domain }}"
    - "{{ glueckskarten_domain }}"
    - "{{ open_biotope_map_domain }}"
    - "{{ open_playground_map_domain }}"
    - "{{ open_recycling_map_domain }}"
    - "{{ open_topo_map_domain }}"
    - "{{ open_transport_map_domain }}"
    - "{{ open_kita_map_domain }}"
    - "{{ open_cultural_map_domain }}"
    - "{{ open_school_map_domain }}"
    - "{{ open_social_map_domain }}"
    - "{{ open_social_map_dev_domain }}"
    - "{{ open_surface_map_domain }}"
    - "{{ open_uranus_domain }}"
    - "{{ open_data_day_domain }}"
    - "{{ open_monuments_map_domain }}"
    - "{{ open_trees_map_domain }}"
    - "{{ open_uranus_admin_domain }}"
    - "{{ open_uranus_api_domain }}"
    - "{{ open_data_api_domain }}"
    - "{{ open_gauge_map_domain }}"
    - "{{ open_accident_map_domain }}"
  tags: nginx_setup

- name: Allow HTTP and HTTPS traffic through the firewall
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  with_items:
    - 80
    - 443
  tags: nginx_setup

- name: Copy nginx.conf configuration
  template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify:
    - restart nginx
  tags: nginx_setup

- name: Copy nginx default.conf configuration
  template:
    src: templates/default.conf.j2
    dest: /etc/nginx/sites-enabled/default
  notify:
    - restart nginx
  tags: nginx_setup

- name: Create directory for dhparams
  file:
    path: /etc/ssl/private
    state: directory
    mode: "0755"
  tags: nginx_setup

- name: Generate dhparams.pem
  command: openssl dhparam -out /etc/ssl/private/dhparams.pem 2048
  args:
    creates: /etc/ssl/private/dhparams.pem
  tags: nginx_setup

- name: Create directory for SSL certificates
  file:
    path: /etc/nginx/ssl
    state: directory
    mode: "0755"
  tags: nginx_setup

- name: Generate SSL certificates for server names
  command: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/{{ item }}.key -out /etc/nginx/ssl/{{ item }}.crt -subj "/CN={{ item }}"
  args:
    creates: /etc/nginx/ssl/{{ item }}.crt
  with_items:
    - "{{ open_parcel_map_domain }}"
    - "{{ glueckskarten_domain }}"
    - "{{ open_biotope_map_domain }}"
    - "{{ open_playground_map_domain }}"
    - "{{ open_recycling_map_domain }}"
    - "{{ open_topo_map_domain }}"
    - "{{ open_transport_map_domain }}"
    - "{{ open_kita_map_domain }}"
    - "{{ open_cultural_map_domain }}"
    - "{{ open_school_map_domain }}"
    - "{{ open_social_map_domain }}"
    - "{{ open_social_map_dev_domain }}"
    - "{{ open_surface_map_domain }}"
    - "{{ open_uranus_domain }}"
    - "{{ open_data_day_domain }}"
    - "{{ open_monuments_map_domain }}"
    - "{{ open_trees_map_domain }}"
    - "{{ open_uranus_admin_domain }}"
    - "{{ open_uranus_api_domain }}"
    - "{{ open_data_api_domain }}"
    - "{{ open_gauge_map_domain }}"
    - "{{ open_accident_map_domain }}"
  tags: nginx_setup

- name: Set up logrotate for nginx
  template:
    src: templates/logrotate_nginx.j2
    dest: /etc/logrotate.d/nginx
    owner: root
    group: root
    mode: 0644
  tags: nginx_setup

- name: Ensure nginx is running and enabled
  service:
    name: nginx
    state: started
    enabled: yes
  tags: nginx_setup
